openapi: 3.0.3
info:
  title: Imagine Platform API
  description: Natural language to runnable applications platform
  version: 1.0.0
servers:
  - url: http://localhost:3001
    description: Development server

paths:
  /api/v1/prompts:
    post:
      summary: Submit a natural language prompt
      operationId: submitPrompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptRequest'
      responses:
        '201':
          description: Prompt submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/v1/prompts/{promptId}:
    get:
      summary: Get prompt status and results
      operationId: getPrompt
      parameters:
        - name: promptId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Prompt details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptResponse'
        '404':
          description: Prompt not found

  /api/v1/plans/{planId}:
    get:
      summary: Get execution plan details
      operationId: getPlan
      parameters:
        - name: planId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Plan details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'

  /api/v1/apps/{appId}:
    get:
      summary: Get generated application details
      operationId: getApp
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Application details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneratedApp'
    post:
      summary: Execute application in sandbox
      operationId: executeApp
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutionContext'
      responses:
        '200':
          description: Execution results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionResult'

  /api/v1/apps/{appId}/evaluate:
    post:
      summary: Evaluate generated application
      operationId: evaluateApp
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TestCase'
      responses:
        '200':
          description: Evaluation results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationResult'

components:
  schemas:
    PromptRequest:
      type: object
      required:
        - id
        - prompt
      properties:
        id:
          type: string
        prompt:
          type: string
        context:
          type: object
          properties:
            userId:
              type: string
            sessionId:
              type: string
            preferences:
              type: object

    PromptResponse:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
        status:
          type: string
          enum: [pending, planning, generating, executing, completed, failed]
        message:
          type: string
        planId:
          type: string
        appId:
          type: string

    PlanStep:
      type: object
      required:
        - id
        - type
        - description
        - status
      properties:
        id:
          type: string
        type:
          type: string
          enum: [perception, synthesis, execution, validation]
        description:
          type: string
        status:
          type: string
          enum: [pending, in_progress, completed, failed]
        input:
          type: object
        output:
          type: object
        error:
          type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        duration:
          type: number

    Plan:
      type: object
      required:
        - id
        - promptId
        - steps
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        promptId:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/PlanStep'
        status:
          type: string
          enum: [pending, in_progress, completed, failed]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    UIComponent:
      type: object
      required:
        - id
        - type
        - properties
        - layout
      properties:
        id:
          type: string
        type:
          type: string
          enum: [table, form, chart, list, button, input, modal]
        properties:
          type: object
        layout:
          type: object
          properties:
            x:
              type: number
            y:
              type: number
            width:
              type: number
            height:
              type: number

    PerceptionResult:
      type: object
      required:
        - components
        - layout
        - interactions
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/UIComponent'
        layout:
          type: string
        interactions:
          type: array
          items:
            type: string

    CodeFile:
      type: object
      required:
        - path
        - content
        - language
      properties:
        path:
          type: string
        content:
          type: string
        language:
          type: string

    GeneratedApp:
      type: object
      required:
        - id
        - files
        - dependencies
        - metadata
      properties:
        id:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/CodeFile'
        dependencies:
          type: object
          additionalProperties:
            type: string
        metadata:
          type::
            framework:
              type: object
          properties string
            language:
              type: string
            entryPoint:
              type: string

    ExecutionContext:
      type: object
      required:
        - appId
        - sandboxId
        - environment
        - resources
      properties:
        appId:
          type: string
        sandboxId:
          type: string
        environment:
          type: object
          additionalProperties:
            type: string
        resources:
          type: object
          properties:
            memory:
              type: number
            cpu:
              type: number
            timeout:
              type: number

    ExecutionResult:
      type: object
      required:
        - success
        - logs
        - metrics
      properties:
        success:
          type: boolean
        output:
          type: string
        error:
          type: string
        logs:
          type: array
          items:
            type: string
        metrics:
          type: object
          properties:
            executionTime:
              type: number
            memoryUsage:
              type: number
            cpuUsage:
              type: number
        artifacts:
          type: array
          items:
            type: string

    TestCase:
      type: object
      required:
        - id
        - description
        - input
        - expectedOutput
        - type
      properties:
        id:
          type: string
        description:
          type: string
        input:
          type: object
        expectedOutput:
          type: object
        type:
          type: string
          enum: [unit, integration, e2e]

    TestResult:
      type: object
      required:
        - testCaseId
        - passed
        - duration
      properties:
        testCaseId:
          type: string
        passed:
          type: boolean
        actualOutput:
          type: object
        error:
          type: string
        duration:
          type: number

    EvaluationResult:
      type: object
      required:
        - appId
        - testResults
        - summary
        - recommendations
      properties:
        appId:
          type: string
        testResults:
          type: array
          items:
            $ref: '#/components/schemas/TestResult'
        summary:
          type: object
          properties:
            total:
              type: number
            passed:
              type: number
            failed:
              type: number
            coverage:
              type: number
        recommendations:
          type: array
          items:
            type: string

    Error:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []